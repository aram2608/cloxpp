Token: VAR var 2
Token: IDENTIFIER n 2
Token: EQUAL = 2
Token: NUMBER 0 2
Token: SEMICOLON ; 2
Token: IDENTIFIER fun 3
Token: IDENTIFIER inc 3
Token: LEFT_PAREN ( 3
Token: RIGHT_PAREN ) 3
Token: LEFT_BRACE { 3
Token: IDENTIFIER n 3
Token: EQUAL = 3
Token: IDENTIFIER n 3
Token: PLUS + 3
Token: NUMBER 1 3
Token: SEMICOLON ; 3
Token: RETURN return 3
Token: IDENTIFIER n 3
Token: SEMICOLON ; 3
Token: RIGHT_BRACE } 3
Token: VAR var 4
Token: IDENTIFIER pickLeft 4
Token: EQUAL = 4
Token: TRUE true 4
Token: IDENTIFIER inc 4
Token: LEFT_PAREN ( 4
Token: RIGHT_PAREN ) 4
Token: LEFT_PAREN ( 4
Token: IDENTIFIER n 4
Token: EQUAL = 4
Token: NUMBER 999 4
Token: RIGHT_PAREN ) 4
Token: SEMICOLON ; 4
Token: VAR var 5
Token: IDENTIFIER afterL 5
Token: EQUAL = 5
Token: IDENTIFIER n 5
Token: SEMICOLON ; 5
Token: VAR var 6
Token: IDENTIFIER pickRight 6
Token: EQUAL = 6
Token: FALSE false 6
Token: LEFT_PAREN ( 6
Token: IDENTIFIER n 6
Token: EQUAL = 6
Token: NUMBER 999 6
Token: RIGHT_PAREN ) 6
Token: IDENTIFIER inc 6
Token: LEFT_PAREN ( 6
Token: RIGHT_PAREN ) 6
Token: SEMICOLON ; 6
Token: VAR var 7
Token: IDENTIFIER afterR 7
Token: EQUAL = 7
Token: IDENTIFIER n 7
Token: SEMICOLON ; 7
Token: PRINT print 8
Token: IDENTIFIER pickLeft 8
Token: SEMICOLON ; 8
Token: PRINT print 9
Token: IDENTIFIER afterL 9
Token: SEMICOLON ; 9
Token: PRINT print 10
Token: IDENTIFIER pickRight 10
Token: SEMICOLON ; 10
Token: PRINT print 11
Token: IDENTIFIER afterR 11
Token: SEMICOLON ; 11
Token: PRINT print 14
Token: TRUE true 14
Token: FALSE false 14
Token: STRING "A" 14
Token: STRING "B" 14
Token: STRING "C" 14
Token: SEMICOLON ; 14
Token: PRINT print 15
Token: FALSE false 15
Token: STRING "X" 15
Token: FALSE false 15
Token: STRING "Y" 15
Token: STRING "Z" 15
Token: SEMICOLON ; 15
Token: PRINT print 18
Token: FALSE false 18
Token: OR or 18
Token: TRUE true 18
Token: STRING "t" 18
Token: STRING "f" 18
Token: SEMICOLON ; 18
Token: PRINT print 19
Token: TRUE true 19
Token: AND and 19
Token: FALSE false 19
Token: STRING "t" 19
Token: STRING "f" 19
Token: SEMICOLON ; 19
Token: VAR var 22
Token: IDENTIFIER a 22
Token: EQUAL = 22
Token: NUMBER 0 22
Token: SEMICOLON ; 22
Token: IDENTIFIER a 23
Token: EQUAL = 23
Token: LEFT_PAREN ( 23
Token: IDENTIFIER a 23
Token: EQUAL_EQUAL == 23
Token: NUMBER 0 23
Token: RIGHT_PAREN ) 23
Token: NUMBER 10 23
Token: NUMBER 20 23
Token: SEMICOLON ; 23
Token: PRINT print 24
Token: IDENTIFIER a 24
Token: SEMICOLON ; 24
Token: PRINT print 25
Token: LEFT_PAREN ( 25
Token: IDENTIFIER a 25
Token: STRING "truthy" 25
Token: STRING "falsey" 25
Token: RIGHT_PAREN ) 25
Token: SEMICOLON ; 25
Token: PRINT print 28
Token: LEFT_PAREN ( 28
Token: FALSE false 28
Token: STRING "no" 28
Token: LEFT_PAREN ( 28
Token: FALSE false 28
Token: STRING "no" 28
Token: STRING "yes" 28
Token: RIGHT_PAREN ) 28
Token: RIGHT_PAREN ) 28
Token: SEMICOLON ; 28
Token: VAR var 31
Token: EQUAL = 31
Token: NUMBER 1 31
Token: SEMICOLON ; 31
Token: FALSE false 32
Token: LEFT_PAREN ( 32
Token: EQUAL = 32
Token: NUMBER 100 32
Token: RIGHT_PAREN ) 32
Token: LEFT_PAREN ( 32
Token: EQUAL = 32
Token: NUMBER 200 32
Token: RIGHT_PAREN ) 32
Token: SEMICOLON ; 32
Token: PRINT print 33
Token: SEMICOLON ; 33
Token: PRINT print 36
Token: LEFT_PAREN ( 36
Token: NUMBER 1 36
Token: LESS < 36
Token: NUMBER 2 36
Token: RIGHT_PAREN ) 36
Token: NUMBER 42 36
Token: NUMBER 99 36
Token: SEMICOLON ; 36
Token: PRINT print 37
Token: LEFT_PAREN ( 37
Token: NIL nil 37
Token: RIGHT_PAREN ) 37
Token: STRING "yes" 37
Token: STRING "no" 37
Token: SEMICOLON ; 37
Token: PRINT print 38
Token: LEFT_PAREN ( 38
Token: FALSE false 38
Token: RIGHT_PAREN ) 38
Token: STRING "yes" 38
Token: STRING "no" 38
Token: SEMICOLON ; 38
Token: EOF  39
