Token: IDENTIFIER fun 1
Token: LEFT_PAREN ( 1
Token: IDENTIFIER n 1
Token: RIGHT_PAREN ) 1
Token: LEFT_BRACE { 1
Token: IF if 2
Token: LEFT_PAREN ( 2
Token: IDENTIFIER n 2
Token: LESS < 2
Token: NUMBER 2 2
Token: RIGHT_PAREN ) 2
Token: RETURN return 2
Token: IDENTIFIER n 2
Token: SEMICOLON ; 2
Token: RETURN return 3
Token: LEFT_PAREN ( 3
Token: IDENTIFIER n 3
Token: MINUS - 3
Token: NUMBER 1 3
Token: RIGHT_PAREN ) 3
Token: PLUS + 3
Token: LEFT_PAREN ( 3
Token: IDENTIFIER n 3
Token: MINUS - 3
Token: NUMBER 2 3
Token: RIGHT_PAREN ) 3
Token: SEMICOLON ; 3
Token: RIGHT_BRACE } 4
Token: VAR var 6
Token: EQUAL = 6
Token: IDENTIFIER clock 6
Token: LEFT_PAREN ( 6
Token: RIGHT_PAREN ) 6
Token: SEMICOLON ; 6
Token: PRINT print 7
Token: LEFT_PAREN ( 7
Token: NUMBER 30 7
Token: RIGHT_PAREN ) 7
Token: SEMICOLON ; 7
Token: VAR var 8
Token: IDENTIFIER after 8
Token: EQUAL = 8
Token: IDENTIFIER clock 8
Token: LEFT_PAREN ( 8
Token: RIGHT_PAREN ) 8
Token: SEMICOLON ; 8
Token: PRINT print 9
Token: IDENTIFIER after 9
Token: MINUS - 9
Token: SEMICOLON ; 9
Token: EOF  9
